% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class-args.R
\docType{class}
\name{scribeArg-class}
\alias{scribeArg-class}
\alias{scribeArg}
\title{{scribe} argument}
\description{
ReferenceClass object for managing arguments
}
\section{Fields}{

\describe{
\item{\code{aliases}}{\verb{[character]}\cr A vector to denote the argument's name}

\item{\code{action}}{\verb{[character]}\cr An action for resolving the argument}

\item{\code{options}}{\verb{[list]}\cr A named list of options (see \strong{Options})}

\item{\code{convert}}{\verb{[ANY]}\cr Passed to the \code{to} argument in \code{\link[=value_convert]{value_convert()}}}

\item{\code{default}}{\verb{[ANY]}\cr A default value}

\item{\code{info}}{\verb{[character]}\cr Additional information about the argument when printed}

\item{\code{n}}{\verb{[integer]}\cr The length of the values}

\item{\code{positional}}{\verb{[logical]}\cr Indicator if the argument is \emph{positional}
(i.e., not preceded by a \code{-} or \verb{--} command line argument)}

\item{\code{id}}{\verb{[integer]}\cr An id (used when stored within \link{scribeCommandArgs})}
}}

\section{Methods}{

\describe{
\item{\code{get_action()}}{Retrieve action}

\item{\code{get_aliases()}}{Retrieve aliases}

\item{\code{get_default()}}{Retrieve the default value}

\item{\code{get_help()}}{Retrieve help information as a \code{character} vector}

\item{\code{get_name(clean = TRUE)}}{Retrieve names

    \describe{
      \item{\code{clean}}{When \code{TRUE} removes \code{-}s from text}
    }}

\item{\code{help()}}{Print out formatted help information}

\item{\code{initialize(
  aliases = NULL,
  id = NULL,
  action = NULL,
  options = NULL,
  convert = NULL,
  default = NULL,
  info = NULL,
  n = NULL
)}}{    Initialize the \link{scribeArg} object

    See \strong{fields} for parameter information.
    }

\item{\code{parse_value(command_arg)}}{Parse argument value

    This method will likely not be called directly by the user.  Instead, this
    method is called within \link{scribeCommandArgs}.

    \describe{
      \item{\code{command_arg}}{A \link{scribeCommandArgs}} object
    }}
}}

\section{Options}{


Several available options
\describe{
\item{\code{action="list"}}{
\describe{
\item{\code{choices}}{
An explicit set of values that argument must be.  If the value parsed
is not one of these, an error will occur.
}
}
}
\item{\code{action="flag"}}{
\describe{
\item{\code{no}}{
When \code{TRUE} included appends \code{--no} to aliases to invert results\cr
\strong{Example:}\cr
With the arg \code{new_arg("--test", options = list(no = TRUE))}, passing
command args \code{--test} would set this to \code{TRUE} and \code{--no-test}
explicitly set to \code{FALSE}.
}
}
}
}
}

