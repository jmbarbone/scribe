[{"path":"https://jmbarbone.github.io/scribe/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 scribe authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jmbarbone.github.io/scribe/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jordan Mark Barbone. Author, copyright holder, maintainer.","code":""},{"path":"https://jmbarbone.github.io/scribe/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Barbone J (2023). scribe: Command Argument Parsing R. R package version 0.0.0.9000, https://jmbarbone.github.io/scribe/.","code":"@Manual{,   title = {scribe: Command Argument Parsing for R},   author = {Jordan Mark Barbone},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://jmbarbone.github.io/scribe/}, }"},{"path":"https://jmbarbone.github.io/scribe/index.html","id":"scribe","dir":"","previous_headings":"","what":"Command Argument Parsing for R","title":"Command Argument Parsing for R","text":"goal scribe provide detailed argument parser Rscript. package contains dependencies outside base methods. core functions utilize ReferenceClasses hood. can enter command args vector test behavior. Arguments can added scribeCommandArgs class (ca). Default behavior tries parse objects additional control can taken. Control ’ll probably use scribe within small scripts can called favorite terminal. example uses function call file, added PATH ’d able call directly:","code":"library(scribe) ca <- command_args(c(\"-a\", \"1\", \"-b\", \"2\")) ca$add_argument(\"-a\") ca$add_argument(\"-b\") args <- ca$parse()  str(args$a + args$b) #>  int 3 # don't convert numbers ca <- command_args(c(\"-a\", \"1\", \"-b\", \"1.0\")) ca$add_argument(\"-a\", convert = character()) ca$add_argument(\"-b\", convert = character()) ca$parse() #> $a #> [1] \"1\" #>  #> $b #> [1] \"1.0\"  # convert numbers to integers ca <- command_args(c(\"verbose\", \"1\", \"1.5\", \"1.9\")) ca$add_argument(\"verbose\", action = \"flag\") ca$add_argument(\"...\", convert = integer()) ca$parse() #> $verbose #> [1] TRUE #>  #> $... #> [1] 1 1 1  # use functions for more control ca <- command_args(c(\"verbose\", \"12-9-2022\", \"12-10-2022\")) ca$add_argument(\"verbose\", action = \"flag\") ca$add_argument(\"...\", convert = function(i) as.Date(i, \"%m-%d-%Y\")) ca$parse() #> $verbose #> [1] TRUE #>  #> $... #> [1] \"2022-12-09\" \"2022-12-10\" r-file -a 1 -b 9 lines <- \" #! /usr/bin/env -S Rscript --vanilla   library(scribe) ca <- scribe::command_args() ca$add_argument('-a', default = 1) ca$add_argument('-b', default = 2) args <- ca$parse()  foo <- function(a, b) {   a + b }  do.call(foo, args) \"  file <- tempfile() writeLines(lines, file)  rscript <- function(x, args = character()) {   args <- c(\"--vanilla\", x, args)   res <- system2(\"Rscript\", args, stdout = TRUE)   writeLines(res) }  rscript(file) #> [1] 3 rscript(file, \"-a 0\") #> [1] 2 rscript(file, \"-a 0 -b 10\") #> [1] 10"},{"path":"https://jmbarbone.github.io/scribe/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Command Argument Parsing for R","text":"’ve using scribe personal scripts. short list examples (mostly jmb repo): pak: call {pak} terminal update-r-pkgs: update old R packages todos: calls mark::todos() fixmes: calls mark::fixmes()","code":""},{"path":"https://jmbarbone.github.io/scribe/index.html","id":"other-packages","dir":"","previous_headings":"","what":"Other packages","title":"Command Argument Parsing for R","text":"isn’t first package. contain dependencies, even different languages (e.g., python). {argparse} {optparse} {getopt} {minimist} (CRAN archived) {optigrab} {docopt}","code":""},{"path":"https://jmbarbone.github.io/scribe/reference/command_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Command args — command_args","title":"Command args — command_args","text":"Command args","code":""},{"path":"https://jmbarbone.github.io/scribe/reference/command_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Command args — command_args","text":"","code":"command_args(   x = NULL,   include = c(\"help\", \"version\", NA_character_),   string = NULL )"},{"path":"https://jmbarbone.github.io/scribe/reference/command_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Command args — command_args","text":"x, string Command args; see base::commandArgs() default.  least one NULL.  string NULL, x used, defaults commandArgs(trailingOnly = TRUE).  Otherwise value converted character.  string NULL, scan() used split value include Special default arguments included","code":""},{"path":"https://jmbarbone.github.io/scribe/reference/command_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Command args — command_args","text":"scribeCommandArgs Reference object","code":""},{"path":"https://jmbarbone.github.io/scribe/reference/scribe-package.html","id":null,"dir":"Reference","previous_headings":"","what":"scribe: Command Argument Parsing for R — scribe-package","title":"scribe: Command Argument Parsing for R — scribe-package","text":"base R solution basic argument parsing use Rscript.","code":""},{"path":[]},{"path":"https://jmbarbone.github.io/scribe/reference/scribe-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"scribe: Command Argument Parsing for R — scribe-package","text":"Maintainer: Jordan Mark Barbone jmbarbone@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://jmbarbone.github.io/scribe/reference/value_convert.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple conversions — value_convert","title":"Simple conversions — value_convert","text":"Convert character data types","code":""},{"path":"https://jmbarbone.github.io/scribe/reference/value_convert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple conversions — value_convert","text":"","code":"value_convert(x, to = default_convert)"},{"path":"https://jmbarbone.github.io/scribe/reference/value_convert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple conversions — value_convert","text":"x vector character values convert x (see details )","code":""},{"path":"https://jmbarbone.github.io/scribe/reference/value_convert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple conversions — value_convert","text":"parsed value x","code":""},{"path":"https://jmbarbone.github.io/scribe/reference/value_convert.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simple conversions — value_convert","text":"can one several values.  Firstly default default calls several additional functions attempt resolve transformation character vector different type.  recommended users enter specifications instead.  Secondly, function (single argument) can passed applied directly x. Third, prototype value can passed.  might risky special types.  , values mode(), storage.mode(), attributes(), class() captured reassigned x.  special check implemented factors safely convert.  Lastly, NULL nothing simply return x.","code":""}]
